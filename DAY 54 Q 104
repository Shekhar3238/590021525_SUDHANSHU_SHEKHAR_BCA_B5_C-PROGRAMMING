//Write a Program to take a positive integer n as input, and find the pivot integer x such that the sum of all elements between 1 and x inclusively equals the sum of all elements between x and n inclusively. Print the pivot integer x. If no such integer exists, print -1. Assume that it is guaranteed that there will be at most one pivot integer for the given input.

#include <stdio.h>

int main()
            {
    int n, i, x;
    int leftSum, rightSum, found = 0;

    printf("Name - SUDHANSHU SHEKHAR \nSAP ID - 590021525 \nCourse - BCA \nBatch - B5");
    printf("\n----------------------------------\n");

    printf("Enter a positive integer n: ");
    scanf("%d", &n);

    for(x = 1; x <= n; x++)
    {
        leftSum = (x * (x + 1)) / 2;          // sum from 1 to x
        rightSum = (n * (n + 1)) / 2 - (x - 1) * x / 2; // sum from x to n

        if(leftSum == rightSum)
        {
            printf("%d\n", x);
            found = 1;
            break;
        }
    }

    if(!found)
        printf("-1\n");

    return 0;
}
